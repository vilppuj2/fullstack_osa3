{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","addPerson","newName","nameChange","newNumber","numberChange","onSubmit","type","Persons","persons","filter","remove","personsToShow","person","name","toLowerCase","includes","map","key","number","onClick","id","Notification","message","errorMessage","className","baseUrl","axios","get","then","response","data","newObject","post","delete","put","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","setErrorMessage","useEffect","personService","initialPersons","event","target","preventDefault","window","confirm","find","p","changedPerson","returnedPerson","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca6156d2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div>\r\n    filter shown with <input value={value} onChange={onChange} />\r\n  </div>\r\n)\r\n\r\nexport default Filter","import React from 'react'\r\n\r\n\r\nconst PersonForm = ({ addPerson, newName, nameChange, newNumber, numberChange }) => (\r\n  <form onSubmit={addPerson}>\r\n    <div>name: <input value={newName} onChange={nameChange} /></div>\r\n    <div>number: <input value={newNumber} onChange={numberChange} /></div>\r\n    <div><button type=\"submit\">add</button></div>\r\n  </form>\r\n)\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\n\r\nconst Persons = ({ persons, filter, remove }) => {\r\n  const personsToShow = persons.filter(person =>\r\n    person.name.toLowerCase().includes(filter.toLowerCase())\r\n  )\r\n  \r\n  return (\r\n    <div>\r\n      {personsToShow.map(person =>\r\n        <p key={person.name}>\r\n          {person.name} {person.number}\r\n          <button onClick={() => remove(person.id)}>delete</button>\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\n\r\nconst Notification = ({ message, errorMessage }) => {\r\n  if (message === null && errorMessage === null) {\r\n    return null\r\n  }\r\n\r\n  if (errorMessage === null) {\r\n    return (\r\n      <div className=\"success\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {errorMessage}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport Notification from './components/Notification'\r\nimport personService from './services/persons'\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filter, setFilter ] = useState('')\r\n  const [ message, setMessage ] = useState(null)\r\n  const [ errorMessage, setErrorMessage ] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n  }, [])\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    if (persons.map(person => person.name).includes(newName)) {\r\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n        const person = persons.find(p => p.name === newName)\r\n        const changedPerson = { ...person, number: newNumber }\r\n        personService\r\n          .update(person.id, changedPerson)\r\n          .then(returnedPerson => {\r\n            setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson))\r\n            setMessage(`Replaced number for ${returnedPerson.name}`)\r\n            setTimeout(() => {\r\n              setMessage(null)\r\n            }, 3000)\r\n          })\r\n          .catch(error => {\r\n            setPersons(persons.filter(p => p.id !== person.id))\r\n            setErrorMessage(`Information of ${person.name} has already been removed from server`)\r\n            setTimeout(() => {\r\n              setErrorMessage(null)\r\n            }, 3000)\r\n          })\r\n      }\r\n    } else {\r\n      const personObject = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n      personService\r\n        .create(personObject)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setMessage(`Added ${returnedPerson.name}`)\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 3000)\r\n        })\r\n    }\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const handleNameChange = (event) => setNewName(event.target.value)\r\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\r\n  const handleFilterChange = (event) => setFilter(event.target.value)\r\n\r\n  const remove = id => {\r\n    const person = persons.find(p => p.id === id)\r\n    if (window.confirm(`Delete ${person.name} ?`)) {\r\n      personService\r\n        .remove(id)\r\n        .then(() => {\r\n          setPersons(persons.filter(p => p.id !== id))\r\n          setMessage(`Deleted ${person.name}`)\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 3000)\r\n        })\r\n        .catch(error => {\r\n          setPersons(persons.filter(p => p.id !== person.id))\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} errorMessage={errorMessage} />\r\n      <Filter value={filter} onChange={handleFilterChange} />\r\n\r\n      <h2>Add a new</h2>\r\n      <PersonForm addPerson={addPerson}\r\n        newName={newName} nameChange={handleNameChange}\r\n        newNumber={newNumber} numberChange={handleNumberChange}\r\n      />\r\n\r\n      <h2>Numbers</h2>\r\n      <Persons persons={persons} filter={filter} remove={remove} />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}